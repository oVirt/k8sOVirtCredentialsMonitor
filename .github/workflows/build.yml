name: Build
on:
  push:
    paths-ignore:
      - '**/*.md'
      - '**/LICENSE'
      - '**/.gitignore'
  pull_request:
  schedule:
    - cron: '0 17 * * 2'
jobs:
  fmt:
    name: gofmt
    runs-on: ubuntu-latest
    if: ${{ github.event_name != 'schedule' }}
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Set up Go
        uses: actions/setup-go@v2
        with:
          go-version: 1.14
      - name: Run gofmt
        run: ./.github/scripts/gofmt.sh
  vet:
    name: go vet
    runs-on: ubuntu-latest
    if: ${{ github.event_name != 'schedule' }}
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Set up Go
        uses: actions/setup-go@v2
        with:
          go-version: 1.14
      - uses: actions/cache@v2
        with:
          path: |
            ~/go/pkg/mod
            ~/.cache/go-build
          key: go-vet-${{ hashFiles('**/go.sum') }}
          restore-keys: go-vet-
      - name: Run go vet
        run: ./.github/scripts/govet.sh
  golangci-lint:
    name: golangci-lint
    runs-on: ubuntu-latest
    if: ${{ github.event_name != 'schedule' }}
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Run golangci-lint
        uses: golangci/golangci-lint-action@v2
        with:
          version: v1.32.2
          args: --timeout=5m -E asciicheck -E bodyclose -E dupl -E errorlint -E exportloopref -E funlen
  codeql:
    name: CodeQL
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
        with:
          fetch-depth: 2
      - name: Initialize CodeQL
        uses: github/codeql-action/init@v1
        with:
          languages: go
      - name: Autobuild
        uses: github/codeql-action/autobuild@v1
      - name: Perform CodeQL Analysis
        uses: github/codeql-action/analyze@v1
  test:
    name: go test
    if: ${{ github.event_name != 'schedule' }}
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Set up Go
        uses: actions/setup-go@v2
        with:
          go-version: 1.14
      - name: Set up Kubernetes
        uses: engineerd/setup-kind@v0.5.0
      - uses: actions/cache@v2
        with:
          path: |
            ~/go/pkg/mod
            ~/.cache/go-build
          key: go-test-${{ hashFiles('**/go.sum') }}
          restore-keys: go-test-
      - name: Run go test
        run: ./.github/scripts/gotest.sh
